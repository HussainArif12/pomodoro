[{"/home/hussain/Projects/pomodoro/src/index.js":"1","/home/hussain/Projects/pomodoro/src/App.js":"2","/home/hussain/Projects/pomodoro/src/reportWebVitals.js":"3","/home/hussain/Projects/pomodoro/src/Display/SesAndBreakTimer.js":"4","/home/hussain/Projects/pomodoro/src/Timers/Timer.js":"5"},{"size":500,"mtime":1608295218292,"results":"6","hashOfConfig":"7"},{"size":236,"mtime":1608640844797,"results":"8","hashOfConfig":"7"},{"size":388,"mtime":1608226521985,"results":"9","hashOfConfig":"7"},{"size":3836,"mtime":1608747277689,"results":"10","hashOfConfig":"7"},{"size":4098,"mtime":1608747707697,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1pxs2uz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/hussain/Projects/pomodoro/src/index.js",[],["24","25"],"/home/hussain/Projects/pomodoro/src/App.js",[],"/home/hussain/Projects/pomodoro/src/reportWebVitals.js",[],"/home/hussain/Projects/pomodoro/src/Display/SesAndBreakTimer.js",[],"/home/hussain/Projects/pomodoro/src/Timers/Timer.js",["26","27"],"import React, { useEffect, useState, useContext } from \"react\";\nimport moment from \"moment\";\nimport Duration from \"luxon/src/duration.js\";\nimport {\n  SessionContext,\n  BreakContext,\n  LongBreakContext,\n} from \"../Display/SesAndBreakTimer.js\";\nimport sessionEndedAudio from \"../Audio/alert_simple.wav\";\nimport breakEndedAudio from \"../Audio/notification_simple-01.wav\";\nimport Button from \"@material-ui/core/Button\";\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport LaptopChromebookOutlinedIcon from \"@material-ui/icons/LaptopChromebook\";\nimport FreeBreakfastOutlinedIcon from \"@material-ui/icons/FreeBreakfast\";\nimport LocalHotelOutlinedIcon from \"@material-ui/icons/LocalHotel\";\n\nexport default function Timer() {\n  const [timerOn, setTimerOn] = useState(false);\n  const [timerDone, setTimerDone] = useState(true);\n  const [timerLength, setTimerLength] = useState(0);\n\n  const [sessionType, setSessionType] = useState(\"Work\");\n\n  const BreakLength = useContext(BreakContext);\n  const SessionLength = useContext(SessionContext);\n  const LongBreak = useContext(LongBreakContext);\n\n  const sessionEnded = new Audio(sessionEndedAudio);\n  const breakEnded = new Audio(breakEndedAudio);\n\n  const [sessionNumber, setSessionNumber] = useState(0);\n\n  const minuteMultiplier = 60;\n  useEffect(() => {\n    if (sessionType === \"Work\") {\n      setTimerLength(SessionLength * minuteMultiplier);\n    }\n  }, [SessionLength, sessionType]);\n\n  useEffect(() => {\n    if (sessionType === \"Break\") {\n      setTimerLength(BreakLength * minuteMultiplier);\n    }\n  }, [BreakLength, sessionType]);\n\n  useEffect(() => {\n    if (sessionType === \"Long Break\") {\n      setTimerLength(LongBreak * minuteMultiplier);\n    }\n  }, [LongBreak, sessionType]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (timerOn) {\n        setTimerLength((timerLength) => timerLength - 1);\n      }\n    }, 200);\n\n    if (timerOn) {\n      setTimerDone(false);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [timerOn]);\n\n  useEffect(() => {\n    if (timerLength < 0) {\n      setTimerOn(false);\n      setTimerDone(true);\n      setSessionType((prevType) => {\n        if (prevType === \"Work\") return \"Break\";\n        if (prevType === \"Break\") return \"Work\";\n        if (prevType === \"Long Break\") return \"Work\";\n      });\n    }\n  }, [timerLength]);\n\n  //get changes for sessionType. If TimerDone, then increment session number\n  useEffect(() => {\n    // .........\n    if (sessionType === \"Work\" && timerDone) {\n      setSessionNumber((sessionNumber) => sessionNumber + 1);\n    }\n    if (timerDone) {\n      sessionEnded.play();\n    }\n  }, [sessionType, timerDone]);\n  /* \n  useEffect(() => {\n    if (timerDone) {\n      sessionEnded.play();\n    }\n  }, [timerDone]); */\n\n  useEffect(() => {\n    if (sessionNumber > 2) {\n      console.log(\"reached limit\");\n      setSessionNumber(0);\n      setSessionType(\"Long Break\");\n    }\n  }, [sessionNumber]);\n\n  return (\n    <>\n      <div className=\"flex flex-col text-center\">\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          startIcon={timerOn ? <PauseIcon /> : <PlayArrowIcon />}\n          onClick={() => {\n            breakEnded.play();\n            setTimerOn(!timerOn);\n          }}\n        >\n          {timerOn ? \"Pause\" : \"Play\"}\n        </Button>\n        <p className=\"font-sans tracking-widest text-6xl text-primary\">\n          {Duration.fromObject({ seconds: timerLength }).toFormat(\"mm:ss\")}\n        </p>\n        <p className=\"text-sessionNumber text-2xl\">\n          Session Number: {sessionNumber}\n        </p>\n        <div>\n          {sessionType === \"Break\" && (\n            <FreeBreakfastOutlinedIcon style={{ color: \"white\" }} />\n          )}\n          {sessionType === \"Work\" && (\n            <LaptopChromebookOutlinedIcon style={{ color: \"white\" }} />\n          )}\n          {sessionType === \"Long Break\" && (\n            <LocalHotelOutlinedIcon style={{ color: \"white\" }} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":14},{"ruleId":"36","severity":1,"message":"37","line":89,"column":6,"nodeType":"38","endLine":89,"endColumn":30,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sessionEnded'. Either include it or remove the dependency array.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [sessionEnded, sessionType, timerDone]",{"range":"45","text":"46"},[2694,2718],"[sessionEnded, sessionType, timerDone]"]